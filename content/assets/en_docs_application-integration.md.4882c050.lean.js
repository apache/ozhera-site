import{_ as n,a as o,b as s,c as l,d as i,e as r,f as p,g as c,h as d,i as h,j as u,k as m,l as g,m as f,n as y,o as _,p as b,q as v,r as q,s as k,t as w,u as P,v as x,w as C,x as T,y as O,z as I,A,B as S}from"./chunks/hera-dash3.0be27f14.js";import{_ as E,o as N,h as M,Q as t,p as e,e as a}from"./chunks/framework.d1267443.js";const X=JSON.parse('{"title":"OzHera Integration Documentation","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/docs/application-integration.md","filePath":"en/docs/application-integration.md"}'),z={name:"en/docs/application-integration.md"},j=t("",7),D=e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Variables"),e("th",{style:{"text-align":"center"}},"Mandatory indicators"),e("th",null,"Default values"),e("th",null,"Comments")])]),e("tbody",null,[e("tr",null,[e("td",null,"-javaagent:/opt/soft/opentelemetry-javaagent-all-0.0.1.jar"),e("td",{style:{"text-align":"center"}},"true"),e("td"),e("td",null,[a("Used to indicate the location of the javaagent probe jar package on the server, "),e("br"),a(" we usually rename the probe's jar file to opentelemetry-javaagent-all-0.0.1.jar and place it in the /opt/soft directory on the server.")])]),e("tr",null,[e("td",{nacosurl:""},"-Dotel.exporter.prometheus.nacos.addr=$"),e("td",{style:{"text-align":"center"}},"true"),e("td"),e("td",null,"Nacos address")]),e("tr",null,[e("td",null,"-Dotel.resource.attributes=service.name=1-test"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"none"),e("td",null,[a('Used to represent the application name of the current service. The format is appId-appName. For example: 1-test, where "1" is the appId and "test" is the appName. '),e("br"),a(' If it is empty, the default used in the program is "none". The application is a very important piece of metadata in OzHera, and observable data presentations are all related to the application.')])]),e("tr",null,[e("td",null,"-Dotel.traces.exporter=log4j2"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"log4j2"),e("td",null,"Used to indicate the trace export method, which is to output the trace to log files via log4j2. The default is to use log4j2.")]),e("tr",null,[e("td",null,"-Dotel.exporter.log.isasync=true"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"true"),e("td",null,[a('Used to indicate whether to enable asynchronous logging with log4j2. Generally, for performance reasons, it would be set to "true". It only takes effect when the value of '),e("code",null,"-Dotel.traces.exporter"),a(" is "),e("code",null,"log4j2"),a(".")])]),e("tr",null,[e("td",null,"-Dotel.metrics.exporter=prometheus"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"prometheus"),e("td",null,"Used to indicate the metrics export method. The default is to use Prometheus.")]),e("tr",null,[e("td",null,"-Dotel.javaagent.exclude-classes=com.dianping.cat.*"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"com.dianping.cat.*"),e("td",null,'Used to filter packages that are not intercepted by the probe. If you are using "cat", you need to filter out the directory where "cat" resides.')]),e("tr",null,[e("td",null,"-Dotel.exporter.log.pathprefix=/home/work/log/"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"/home/work/log/"),e("td",null,[a("Used to indicate the location of log4j2 logs. Here, the log4j2 logs will be outputted to the location represented by the environment variable named MIONE_LOG_PATH. If this environment variable does not exist, it will be outputted to the "),e("code",null,"-Dotel.exporter.log.pathprefix"),a(" \\ "),e("code",null,"MIONE_PROJECT_NAME"),a(" directory."),e("br"),a("Note: In k8s, this directory needs to be mounted so that the log collection container can access it.")])]),e("tr",null,[e("td",null,"-Dotel.propagators=tracecontext"),e("td",{style:{"text-align":"center"}},"false"),e("td",null,"tracecontext"),e("td",null,'Used to indicate the processing type for trace transmission. Currently, only "tracecontext" has been used.')])])],-1),H=t("",82),R=[j,D,H];function $(V,J,L,Q,U,F){return N(),M("div",null,R)}const B=E(z,[["render",$]]);export{X as __pageData,B as default};
